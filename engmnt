<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Engagements Table</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f8f9fa;
        }
        .container {
            max-width: 1200px;
            margin: auto;
            background: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
            background: white;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #007bff;
            color: white;
        }
        .filter-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 10px;
        }
        input, select, button {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #007bff;
            color: white;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .pagination {
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>

<div class="container">
    <h2>Engagements Table</h2>

    <div class="filter-container">
        <select id="filterTags">
            <option value="">Select Tag</option>
        </select>
        <input type="text" id="filterName" placeholder="Filter by Name">
        <input type="text" id="filterDescription" placeholder="Filter by Description">
        <input type="text" id="filterVersion" placeholder="Filter by Version">
        <input type="text" id="filterLead" placeholder="Filter by Lead">
        <input type="text" id="filterProduct" placeholder="Filter by Product">
        <input type="date" id="filterCreatedFrom"> to 
        <input type="date" id="filterCreatedTo">
        <input type="date" id="filterUpdatedFrom"> to 
        <input type="date" id="filterUpdatedTo">
        <button onclick="applyFilters()">Apply Filters</button>
        <button onclick="clearFilters()">Clear All</button>
    </div>

    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Tags</th>
                <th>Name</th>
                <th>Description</th>
                <th>Version</th>
                <th>Created</th>
                <th>Status</th>
                <th>Lead</th>
                <th>Product</th>
                <th>Updated</th>
                <th>Notes</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="tableBody">
        </tbody>
    </table>

    <div class="pagination">
        <button onclick="firstPage()">First</button>
        <button onclick="prevPage()">Previous</button>
        <span id="pageInfo"></span>
        <button onclick="nextPage()">Next</button>
        <button onclick="lastPage()">Last</button>
    </div>
</div>

<script>
    const baseUrl = "https://demo.defectdojo.org/api/v2/engagements";
    let currentPage = 1, totalPages = 1;
    let engagements = [];
    let allTags = new Set();

    function fetchData() {
        fetch(`${baseUrl}?limit=50&page=${currentPage}`)
            .then(response => response.json())
            .then(data => {
                engagements = data.results || [];
                totalPages = Math.ceil(data.count / 50);
                updateTagDropdown();
                renderTable();
            })
            .catch(error => console.error("Error fetching data:", error));
    }

    function updateTagDropdown() {
        engagements.forEach(item => {
            if (item.tags) {
                item.tags.forEach(tag => allTags.add(tag));
            }
        });

        let tagSelect = document.getElementById("filterTags");
        tagSelect.innerHTML = `<option value="">Select Tag</option>`;
        allTags.forEach(tag => {
            let option = document.createElement("option");
            option.value = tag;
            option.textContent = tag;
            tagSelect.appendChild(option);
        });
    }

    function renderTable() {
        const tbody = document.getElementById("tableBody");
        tbody.innerHTML = "";
        engagements.forEach(item => {
            let row = `<tr>
                <td>${item.id}</td>
                <td>${item.tags ? item.tags.join(", ") : ""}</td>
                <td>${item.name || ""}</td>
                <td>${item.description || ""}</td>
                <td>${item.version || ""}</td>
                <td>${formatDate(item.created)}</td>
                <td>${item.status || ""}</td>
                <td>${item.lead || ""}</td>
                <td>${item.product || ""}</td>
                <td>${formatDate(item.updated)}</td>
                <td>${item.notes || "N/A"}</td>
                <td>
                    <button onclick="editEngagement(${item.id})">Edit</button>
                    <button onclick="closeEngagement(${item.id})">Close</button>
                    <button onclick="addNotes(${item.id})">Add Notes</button>
                </td>
            </tr>`;
            tbody.innerHTML += row;
        });
        document.getElementById("pageInfo").innerText = `Page ${currentPage} of ${totalPages}`;
    }

    function formatDate(dateString) {
        return dateString ? new Date(dateString).toISOString().split('T')[0] : "";
    }

    function firstPage() { currentPage = 1; fetchData(); }
    function prevPage() { if (currentPage > 1) currentPage--; fetchData(); }
    function nextPage() { if (currentPage < totalPages) currentPage++; fetchData(); }
    function lastPage() { currentPage = totalPages; fetchData(); }

    function applyFilters() {
        let tag = document.getElementById("filterTags").value.toLowerCase();
        engagements = engagements.filter(item => !tag || (item.tags && item.tags.includes(tag)));
        renderTable();
    }

    function clearFilters() {
        document.querySelectorAll(".filter-container input, .filter-container select").forEach(input => input.value = "");
        fetchData();
    }

    function editEngagement(id) { alert(`Edit engagement ID: ${id}`); }
    function closeEngagement(id) { alert(`Close engagement ID: ${id}`); }
    function addNotes(id) { alert(`Add notes to engagement ID: ${id}`); }

    setInterval(fetchData, 11 * 60 * 1000);
    fetchData();
</script>

</body>
</html>